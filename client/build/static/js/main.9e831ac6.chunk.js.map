{"version":3,"sources":["constants/actionTypes.js","reducers/index.js","reducers/posts.js","api/index.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","actions/posts.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","images/memories.png","styles.js","App.js","reportWebVitals.js","index.js"],"names":["CREATE","UPDATE","DELETE","FETCH_ALL","combineReducers","posts","action","type","filter","post","_id","payload","map","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","likePost","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","Post","setCurrentId","classes","useStyles","dispatch","useDispatch","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","console","log","fontSize","tags","tag","gutterBottom","CardContent","component","message","CardActions","a","api","data","likeCount","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","useSelector","state","length","Grid","container","item","xs","sm","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","useState","postData","setPostData","find","p","useEffect","clear","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","newPost","createPost","TextField","name","label","fullWidth","value","onChange","target","split","multiple","onDone","base64","appBar","heading","marginLeft","breakpoints","down","App","get","Container","maxwidth","AppBar","align","src","memories","alt","Grow","in","justify","spaceing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e831ac6.chunk.js","sourcesContent":["export const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\nexport const FETCH_ALL = 'FETCH_ALL';","import { combineReducers } from \"redux\";\r\nimport posts from './posts';\r\n\r\nexport default combineReducers({ posts })","import { CREATE, UPDATE, DELETE, FETCH_ALL } from '../constants/actionTypes';\r\n\r\nexport default (posts = [], action) => {\r\n    switch (action.type) {\r\n        case DELETE:\r\n            return posts.filter((post) => post._id !== action.payload);\r\n        case FETCH_ALL:\r\n            return action.payload;\r\n        case UPDATE:\r\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post );\r\n        case CREATE:\r\n            return [ ... posts, action.payload];\r\n        default:\r\n            return posts;\r\n    }\r\n}","import axios from 'axios';\r\n\r\nconst url = 'https://onoy-mern-memories-api.herokuapp.com/posts';\r\n\r\nexport const fetchPosts = () => axios.get(url);\r\nexport const createPost = ( newPost ) => axios.post(url, newPost);\r\nexport const updatePost = ( id, updatedPost ) => axios.patch(`${url}/${id}`, updatedPost);\r\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\r\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`);","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    height: '100%',\r\n    position: 'relative',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n});","import React from 'react';\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from 'moment';\r\n\r\nimport useStyles from './styles';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { deletePost, likePost } from '../../../actions/posts'; \r\n\r\nconst Post = ( { post, setCurrentId }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch(); \r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardMedia className={classes.media} image={post.selectedFile} title={post.title} />\r\n            <div className={classes.overlay}>\r\n                <Typography variant=\"h6\">{post.creator}</Typography>\r\n                <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n            </div>\r\n            <div className={classes.overlay2}>\r\n                <Button style={{color: 'white'}} size=\"small\" onClick={() => {\r\n                    setCurrentId(post._id);\r\n                    console.log(post._id);\r\n                }} >\r\n                    <MoreHorizIcon fontSize=\"default\" />\r\n                </Button>\r\n            </div>\r\n            <div className={classes.details}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n            </div>\r\n            <Typography className={classes.title} variant=\"h5\" gutterBottom>{post.title}</Typography>\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" gutterBottom>{post.message}</Typography>\r\n            </CardContent>\r\n            <CardActions className={classes.cardActions}>\r\n                <Button size=\"small\" color=\"primary\" onClick={() => dispatch(likePost(post._id)) }>\r\n                    <ThumbUpAltIcon fontSize=\"small\" />\r\n                    Like &nbsp;\r\n                    {post.likeCount}\r\n                </Button>\r\n                <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))}>\r\n                    <DeleteIcon fontSize=\"small\" />\r\n                    Delete\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import { CREATE, UPDATE, DELETE, FETCH_ALL } from '../constants/actionTypes';\r\nimport * as api from '../api';\r\n\r\n//Action Creators\r\nexport const getPosts = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchPosts();\r\n\r\n        dispatch ({\r\n            type: FETCH_ALL,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createPost(post);\r\n\r\n        dispatch({ type: CREATE, payload: data});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, post);\r\n\r\n        dispatch({ type: UPDATE, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n        dispatch({ type: DELETE, payload: id });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.likePost(id);\r\n\r\n        dispatch({ type: UPDATE, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  actionDiv: {\r\n    textAlign: 'center',\r\n  },\r\n}));","import React from 'react';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Post from './Post/Post';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst Posts = ({ setCurrentId }) => {\r\n    const posts = useSelector((state) => state.posts);\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        !posts.length ? <CircularProgress /> : (\r\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n                {posts.map((post)=>(\r\n                    <Grid key={post._id} item xs={12} sm={6}>\r\n                        <Post post={post} setCurrentId={setCurrentId} />\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        )\r\n    )\r\n}\r\n\r\nexport default Posts\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  fileInput: {\r\n    width: '97%',\r\n    margin: '10px 0',\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}));","import React, {useState, useEffect} from 'react';\r\n\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport FileBase from 'react-file-base64';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport useStyles from './styles';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\n\r\nconst Form = ( { currentId, setCurrentId}) => {\r\n    const [ postData, setPostData ] = useState({\r\n        creator: '',\r\n        title: '',\r\n        message: '',\r\n        tags: '',\r\n        selectedFile: ''\r\n    })\r\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId ) : null);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(post) setPostData(post);\r\n    }, [post])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(currentId) {\r\n            dispatch(updatePost(currentId, postData));\r\n        } else{\r\n            dispatch(createPost(postData));\r\n        }\r\n        clear();\r\n    }\r\n\r\n    const clear = () => {\r\n        setCurrentId(null);\r\n        setPostData({\r\n            creator: '',\r\n            title: '',\r\n            message: '',\r\n            tags: '',\r\n            selectedFile: ''\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                <Typography variant=\"h6\">\r\n                    {currentId ? 'Editing' : 'Creating' } a memory\r\n                </Typography>\r\n                <TextField \r\n                    name=\"creator\" \r\n                    variant=\"outlined\" \r\n                    label=\"Creator\" \r\n                    fullWidth \r\n                    value={postData.creator}\r\n                    onChange={(e)=> setPostData({\r\n                        ... postData,\r\n                        creator: e.target.value\r\n                    }) }     \r\n                />\r\n                <TextField \r\n                    name=\"title\" \r\n                    variant=\"outlined\" \r\n                    label=\"Title\" \r\n                    fullWidth \r\n                    value={postData.title}\r\n                    onChange={(e)=> setPostData({\r\n                        ... postData,\r\n                        title: e.target.value\r\n                    }) }     \r\n                />\r\n                <TextField \r\n                    name=\"message\" \r\n                    variant=\"outlined\" \r\n                    label=\"Message\" \r\n                    fullWidth \r\n                    value={postData.message}\r\n                    onChange={(e)=> setPostData({\r\n                        ... postData,\r\n                        message: e.target.value\r\n                    }) }     \r\n                />\r\n                <TextField \r\n                    name=\"tags\" \r\n                    variant=\"outlined\" \r\n                    label=\"Tags\" \r\n                    fullWidth \r\n                    value={postData.tags}\r\n                    onChange={(e)=> setPostData({\r\n                        ... postData,\r\n                        tags: e.target.value.split(',')\r\n                    }) }     \r\n                />\r\n                \r\n                <div className={classes.fileInput}>\r\n                    <FileBase\r\n                        type=\"file\"\r\n                        multiple={false}\r\n                        onDone = {({base64}) => setPostData({ ... postData, selectedFile: base64})}\r\n\r\n                    />\r\n                </div>\r\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","export default __webpack_public_path__ + \"static/media/memories.9cfa8a46.png\";","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    margin: '30px 0',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  heading: {\r\n    color: 'rgba(0,183,255, 1)',\r\n  },\r\n  image: {\r\n    marginLeft: '15px',\r\n  },\r\n  [theme.breakpoints.down('sm')]:{\r\n      mainContainer:{\r\n      flexDirection:\"column-reverse\"\r\n    }\r\n  }\r\n}));","import React, { useState, useEffect} from 'react';\r\nimport {Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\r\nimport {useDispatch} from 'react-redux';\r\n \r\nimport {getPosts} from './actions/posts';\r\nimport Posts from './components/Posts/Posts';\r\nimport Form from './components/Form/Form';\r\nimport memories from './images/memories.png';\r\nimport useStyles from './styles';\r\n\r\nconst App = () =>  {\r\n  const [currentId, setCurrentId] = useState(null);\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect (()=>{\r\n    dispatch(getPosts());\r\n  }, [currentId, dispatch])\r\n\r\n  return (\r\n    <Container maxwidth=\"lg\">\r\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n        <Typography className={classes.heading} variant=\"h2\" align=\"center\">Memories</Typography>\r\n        <img className={classes.image} src={memories} alt=\"memories\" height=\"60\"/>\r\n      </AppBar>\r\n      <Grow in>\r\n        <Container>\r\n          <Grid className={classes.mainContainer} container justify=\"space-between\" alignItems=\"stretch\" spaceing={3}>\r\n            <Grid item xs={12} sm={7}>\r\n              <Posts setCurrentId={setCurrentId} />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <Form currentId={currentId} setCurrentId={setCurrentId} />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </Grow>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport {createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport reducers from './reducers';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport './index.css';\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n        <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}